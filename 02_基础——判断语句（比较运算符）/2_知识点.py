"""
目录：
    1.布尔类型和比较运算符
    2.if语句的基本格式
    3.if else 语句
    4.if elif else 语句
    5.判断语句的嵌套
"""
"""
        python中常用的6中值（数据）的类型

            1.数字类型（Number）
                包含：·整数（int）·浮点数（float）·复数（complex）·布尔（bool）
                    描述：
                        布尔：True表示真，False表示假、
                        True本质上是一个数字记作1，False记作0
            2.字符串（String）
                描述文本的一种数据类型
                    描述：
                        字符串由任意数量的字符组成
            3.列表（List）
                有序的可变序列
                    描述：
                       Python中使用最频繁的数据类型，可有序记录一堆数据 
            4.元组（Tuple）
                有序的不可变序列
                    描述：
                        可有序记录一堆不可变的Python数据集合
            5.集合（Set）
                无序不重复集合
                    描述：
                        可无序记录一堆不重复的Python数据集合
            6.字典（Dictionary）
                无序Key-Value集合
                    描述：
                        可无序记录一堆Key-Value型的Python数据集合

"""

"""
1.布尔类型和比较运算符
    布尔（bool）表达现实生活中的逻辑，即真和假
    布尔类型的字面量：
                True表示真（是，肯定)
                False表示假(否，否定）
    定义变量存储布尔类型数据：
        变量名 = 布尔类型字面量
    比较运算符：
        != 不等于
        其余的略..
    
    布尔类型除了可以直接定义外，还可以通过比较运算计算得到布尔类型
"""
# 例子 直接定义布尔类型
bool_1 = True
bool_2 = False
print(f"bool_1变量的结果是{bool_1}，它的类型是{type(bool_1)}")
print(f"bool_2变量的结果是{bool_2}，它的类型是{type(bool_2)}")

# 例子 通过比较运算 得到布尔类型
num_1 = 10
num_2 = 15
print(f"10>15的结果是{num_1 > num_2}")    # 结果为False 表示假

"""
2.if语句的基本格式
    基本格式：
        if 要判断的条件：
            条件成立时，要执行的事情
    注意：
        ·判断条件的结果一定是布尔类型
        ·不要忘记判断条件后的‘：’冒号
        ·归属于if语句的代码块，需要在前方填充四个空格缩进
        
        
"""
# 例一 条件成立
age = 20
if age > 10:
    print("你的年纪超过十岁了")
print("时间过的真快")

# 例二 条件不成立
if age > 30:
    print("你的年纪超过三十岁了")   # 条件不满足 不输出
print("时间过的真快")  # 因为缩进关系 此行代码不被判断语句影响，照常输出

"""
3.if else 语句
     基本格式：
        if 要判断的条件：
            条件成立时，要执行的事情
        else：
            条件不成立，要执行的事情
"""
"""
4.if  elif else 语句
     基本格式：
        if 条件1：
            条件1满足要执行的事情
                 ...
        elif 条件2
             条件2满足要执行的事情
                 ...
        elif 条件N
             条件N满足要执行的事情
                 ...        
        else：
            所有条件都不满足要执行的事情
    
    注意：
        ·elif可以写多个
        ·判断是互斥且有序的，上一个满足后面的就不会判断力
        `可以将input输入语句直接写入判断条件中，节省代码量
        
"""
"""
5.判断语句的嵌套
     基本格式：
        if 条件1：
            条件1成立时，要执行的事情
            
            if 条件2：
                条件2成立时，要执行的事情
                
                 if 条件N：
                    条件N成立时，要执行的事情
                 else:
                    条件N不成立时，要执行的事情 
            else：
                条件2不成立时，要执行的事情
        else：
            条件1不成立时，要执行的事情
              
    注意：
        ·只有第一个if满足条件，才会执行下一个if
        ·一定要注意空格缩进，python通过空格缩来决定层次关系
        ·通过空格缩进，来决定语句之间的层次关系
        ·嵌套判断语句可以根据需求，自由的组合 if elif else 来构建多层次判断
        
"""








































