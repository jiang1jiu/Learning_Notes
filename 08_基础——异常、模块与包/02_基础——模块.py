"""

"""
"""
1.模块的定义
    模块的作用: 
        python中有很多各种不同的模块,每一个模块都可以帮助我们
        快速的实现一些功能,比如实现和时间相关的功能就可以使用
        time模块我们可以认为一个模块就是一个工具包，
        每一个工具包中都有各种不同的工具供我们使用进而实现各种不同的功能.
2.模块的导入方式
    语法： ，中括号[]表示可选
        [form 模块名] import [模块 | 类 | 变量 | 函数 | *] [as 别名]
    常用组合方式
        1>import 模块名
        2>from 模块名 import 类、变量、方法等
        3>form 模块名 import *
        4>import 模块名 as 别名
        5>from 模块名 import 功能名 as 别名
    2.1.import 模块名
        语法：
            import 模块名
            (import 模块名1，模块2)
        
            模块名.功能名()     #调用
    2.2.from 模块名 import 功能名
        语法：
            from 模块名 import 功能名
            
            功能名()           #调用
    3.3.from 模块名 import *
        语法：
            from 模块名 import *
            
            功能名()
        *:表示把模块中所有的功能都导入进来
    3.4.import 模块名 as 别名     # 主要适用于太长的函数名给改短一点
        语法：
            08_基础——异常、模块与包/图片知识点/知识点——import 模块名 as 别名.png
    3.5.from 模块名 import 功能名 as 别名
        语法：
            同上(3.4)
3.自定义模块
    定义：
        每个Python文件都可以作为一个模块,
        模块的名字就是文件的名字.也就是说自定义模块名必须要符合标识符命名规则
    注意：
        自定义模块的文件和被导入的文件要在同一个目录下面
        当导入多个模块的时候，且模块为有同名功能.
        当调用这个同名功能的时候，调用到的是后面导入的模块的功能
    3.1>关于 __main__ 变量
        _ _main_ _是在模块内部使用，调用的时候告诉他，下面的代码不管你你的事
        main的值其实就是在本函数体中运行。
        当调用这个函数体时i，main就不在定义的函数体了，所以if不成立。
        ------------
        详情：
            08_基础——异常、模块与包/图片知识点/__main__变量.png
    3.2>关于 __all__变量
        定义：
            __all__ =['函数']
        定义：
            如果一个模块文件中有`__all__`变量，
            当使用`form 模块名 import *'导入时，只能导入这个变量中所写的内容
        见：
            08_基础——异常、模块与包/图片知识点/__all__变量.png
4.自定义模块的导入总结
    见：
        08_基础——异常、模块与包/图片知识点/自定义模块总结.png
"""
# 例2.1
# 导入时间模块
# import time
#
# print("开始")
# # 让程序开始休眠1秒
# time.sleep(1)
# print("结束")
# 例2.2
# 导入时间模块
# from time import sleep
#
# print("开始")
# # 让程序开始休眠1秒
# sleep(1)
# print("结束")
# 例2.3
# 导入时间模块
from time import *

print("开始")
# 让程序开始休眠1秒
sleep(1)
print("结束")