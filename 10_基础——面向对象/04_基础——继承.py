"""

"""
"""
1.单继承
    单继承的基础语法
        class 类名（父类名）：
            类内容体
2.多继承
    多继承的基础语法
        class 类名（父类1， 父类2， 父类3，...,父类N）：
            类内容体
    小知识：
        pass关键字
        用来补全语法，pass本身为空，只是为了补全语法不报错
        例如
        class 类名（父类1， 父类2， 父类3，...,父类N）：
            pass    # 不想补充新的内容了，只调用前面的东西
                       为了防止报错，可以写个pass防止报错
    注意：
        多个父类中,如果有同名的成员,那么默认以继承顺序（从左到右）为优先级。
        即:先继承的保留，后继承的被覆盖   

3.复写和使用父类成员
    复写：
        复写子类继承父类的成员属性和成员方法后,如果对其“不满意”,那么可以进行复写。
        即:在子类中重新定义同名的属性或方法即可。 
    调用父类同名成员
        一旦复写父类成员,那么类对象调用成员的时候,就会调用复写后的新成员
        如果需要使用被复写的父类的成员,需要特殊的调用方式: 
            方法1：
                调用父类成员
                    使用父类成员变量：父类名.成员变量
                    使用成员方法：父类名.成员方法（self）
            方法2：
                使用super()调用父类成员
                    使用成员变量：super().成员变量
                    使用成员方法：super().成员方法（）  
     
                            
                            
                            
                            
                            
                            
                            
                            
                            
                            
                                   
"""