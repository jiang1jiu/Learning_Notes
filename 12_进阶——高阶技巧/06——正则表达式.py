"""
Python正则表达式,使用re模块,并基于re模块中三个基础方法来做正则匹配。
"""
import re
"""
1.正则的三个基础方式
    1，match方法
        语法：
            re.match(匹配规则，被匹配字符串)
        用法：
            从被匹配字符串开头进行匹配,匹配成功返回匹配对象(包含匹配的信息),
            匹配不成功返回空
    2，search方法
        语法：
           re.match(匹配规则，被匹配字符串) 
        用法：
            搜索整个字符串,找出匹配的。从前向后,找到第一个后,就停止,不会继续向后 
            如果找不到返回None
    3，findall方法
        语法：
            re.match(匹配规则，被匹配字符串)   
        用法：
            匹配整个字符串,找出全部匹配项
            如果找不到返回list[]空列表
2.元字匹配符
    单字符匹配：
        字符  功能
         .   匹配任意1个字符(除了\n) , \. 匹配点本身
         []  匹配[]中列举的字符
         \d  匹配数字，即0-9
         \D  匹配非数字
         \s  匹配空白，即空格、tab键
         \s  匹配非空白匹配单词字符，即a-z、A-Z、0-9、_
         \w  匹配非单词字符
     
        字符串的r标记,表示当前字符串是原始字符串,即内部的转义字符无效而是普通字符
    
    数量匹配：
    字符      功能
    *       匹配前一个规则的字符出现0至无数次
    +       匹配前一个规则的字符出现1至无数次
    ?       匹配前一个规则的字符出现0次或1次
    {m}     匹配前一个规则的字符出现m次
    {m,}    匹配前一个规则的字符出现最少m次
    {m,n}   匹配前一个规则的字符出现m到n次
"""
